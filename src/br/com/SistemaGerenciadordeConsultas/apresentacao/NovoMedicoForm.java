/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.SistemaGerenciadordeConsultas.apresentacao;

import br.com.SistemaGerenciadordeConsultas.entidade.Especialidade;
import br.com.SistemaGerenciadordeConsultas.entidade.Medico;
import br.com.SistemaGerenciadordeConsultas.excecao.CampoObrigatorioException;
import br.com.SistemaGerenciadordeConsultas.excecao.CpfMedicoExisteException;
import br.com.SistemaGerenciadordeConsultas.excecao.GerenciadorConsultasException;
import br.com.SistemaGerenciadordeConsultas.negocio.EspecialidadeBO;
import br.com.SistemaGerenciadordeConsultas.negocio.MedicoBO;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Rayssa
 */
public class NovoMedicoForm extends javax.swing.JFrame {

    private Medico medico;
    private boolean medicoEmEdicao;
    private ListagemMedicoForm listagemMedicoForm;
    private List<Medico> medicos;
    private List<Especialidade> especialidades;

    public NovoMedicoForm(ListagemMedicoForm listagemMedicoForm) throws SQLException {
        especialidades = new ArrayList<>();
        medico = new Medico();
        this.listagemMedicoForm = listagemMedicoForm;
        initComponents();
        carregarCmb();

    }

    NovoMedicoForm(Medico medicoSelecionado, ListagemMedicoForm listagemMedicoForm) throws SQLException {
        medicoEmEdicao = true;
        medico = medicoSelecionado;
        especialidades = new ArrayList<>();
        this.listagemMedicoForm = listagemMedicoForm;
        initComponents();
        carregarCmb();
        inicializarCamposTela();
    }

    public void inicializarCamposTela() throws SQLException {
        this.txtNome.setText(this.medico.getNome());
        this.txtCpf.setText(this.medico.getCpf());
        this.txtCrm.setText(this.medico.getCrm());
        this.txtEndereco.setText(this.medico.getEndereco());
        this.txtTelefone.setText(this.medico.getTelefone());
        if (medico.getSexo().equals("F")) {
            rdoF.setSelected(true);
        } else if (medico.getSexo().equals("M")) {
            rdoM.setSelected(true);
        }
        EspecialidadeBO especialidadeBO = new EspecialidadeBO();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cmbEspecialidade.getModel();
        model.removeAllElements();
        model.addElement(medico.getEspecialidade());
        for (Especialidade especialidade : especialidadeBO.buscarTodos()) {
            model.addElement(especialidade);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rgbSexo = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnVoltar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        lblSexo = new javax.swing.JLabel();
        rdoM = new javax.swing.JRadioButton();
        rdoF = new javax.swing.JRadioButton();
        lblEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        lblTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField();
        lblEspecialidade = new javax.swing.JLabel();
        cmbEspecialidade = new javax.swing.JComboBox();
        lblCrm = new javax.swing.JLabel();
        txtCrm = new javax.swing.JFormattedTextField();
        lblCpf = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        imagemMedico = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CADASTRO MÉDICOS");
        setExtendedState(6);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro Médicos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/SistemaGerenciadordeConsultas/apresentacao/icones/1469138248_ic_assignment_return_48px.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/SistemaGerenciadordeConsultas/apresentacao/icones/save-file.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        lblSexo.setText("Sexo:");

        rgbSexo.add(rdoM);
        rdoM.setText("M");

        rgbSexo.add(rdoF);
        rdoF.setText("F");

        lblEndereco.setText("Endereço:");

        lblTelefone.setText("Telefone:");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblEspecialidade.setText("Especialidade");

        cmbEspecialidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbEspecialidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEspecialidadeActionPerformed(evt);
            }
        });

        lblCrm.setText("CRM:");

        try {
            txtCrm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblCpf.setText("Cpf:");

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfActionPerformed(evt);
            }
        });

        lblNome.setText("Nome:");

        imagemMedico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/SistemaGerenciadordeConsultas/apresentacao/icones/doctor (5).png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCrm)
                                    .addComponent(lblNome)
                                    .addComponent(lblEspecialidade)
                                    .addComponent(lblCpf)
                                    .addComponent(lblTelefone)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEndereco, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblSexo, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(12, 12, 12))
                    .addComponent(btnSalvar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome)
                            .addComponent(txtCpf)
                            .addComponent(txtCrm)
                            .addComponent(cmbEspecialidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTelefone)
                            .addComponent(txtEndereco)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdoM)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdoF)
                                .addGap(0, 334, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVoltar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagemMedico)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCpf)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(lblCrm))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCrm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEspecialidade)
                    .addComponent(cmbEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTelefone)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEndereco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSexo)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdoM)
                        .addComponent(rdoF)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnVoltar))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(imagemMedico)
                .addGap(0, 28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(817, 358));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed
    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (medicoEmEdicao == false) {
            salvarMedico();
        } else {
            editarMedico();
        }
    }//GEN-LAST:event_btnSalvarActionPerformed
    private void salvarMedico() {
        

            String nome = txtNome.getText().trim();
            String cpf = txtCpf.getText().trim();
            String crm = txtCrm.getText().trim();
            Especialidade especialidade = (Especialidade) cmbEspecialidade.getSelectedItem();
            String telefone = txtTelefone.getText().trim();
            String endereco = txtEndereco.getText().trim();
            String sexo = "";
            if (rdoF.isSelected()) {
                sexo = "F";
            } else if (rdoM.isSelected()) {
                sexo = "M";
            }
            Medico medico = new Medico();
            medico.setNome(nome);
            medico.setCpf(cpf);
            medico.setCrm(crm);
            medico.setEspecialidade(especialidade);
            medico.setTelefone(telefone);
            medico.setEndereco(endereco);
            medico.setSexo(sexo);
            try {
                MedicoBO medicoBO = new MedicoBO();
                medicoBO.salvar(medico);
                 JOptionPane.showMessageDialog(this,
                    "Médico cadastrado com sucesso!",
                    "Cadastro de Médico",
                    JOptionPane.INFORMATION_MESSAGE);
                carregarCmb();
                this.limparCamposTela();
                listagemMedicoForm.carregarTabelaMedico();
            }catch (GerenciadorConsultasException e) {
            JOptionPane.showMessageDialog(
                    this,
                    e.getMessage(),
                    "Cadastro de Médico",
                    JOptionPane.ERROR_MESSAGE
            );
        } catch (Exception e) {
            System.out.println("Erro inesperado! Informe a mensagem de erro ao administrador do sistema.");
            e.printStackTrace(System.out);
            JOptionPane.showMessageDialog(
                    this,
                    "Erro inesperado! Informe o erro ao administrador do sistema",
                    "Cadastro de Médico",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }

    private void editarMedico() {
        try {
            String nome = txtNome.getText().trim();
            String cpf = txtCpf.getText().trim();
            String crm = txtCrm.getText().trim();
            Especialidade especialidade = (Especialidade) cmbEspecialidade.getSelectedItem();
            String telefone = txtTelefone.getText().trim();
            String endereco = txtEndereco.getText().trim();
            String sexo = "";
            if (rdoF.isSelected()) {
                sexo = "F";
            } else if (rdoM.isSelected()) {
                sexo = "M";
            }

            medico.setNome(nome);
            medico.setCpf(cpf);
            medico.setCrm(crm);
            medico.setEspecialidade(especialidade);
            medico.setTelefone(telefone);
            medico.setEndereco(endereco);
            medico.setSexo(sexo);
            try {
                MedicoBO medicoBO = new MedicoBO();
                medicoBO.editar(medico);
                JOptionPane.showMessageDialog(this, "Médico Alterado com Sucesso!", "Alteração de Médico!", JOptionPane.INFORMATION_MESSAGE);
                carregarCmb();
                listagemMedicoForm.carregarTabelaMedico();

            } catch (GerenciadorConsultasException ex) {
                JOptionPane.showMessageDialog(this, "Médico já cadastrado com esse CPF!", "Alteração de Médico!", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                Logger.getLogger(NovoMedicoForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (CampoObrigatorioException ex) {
            JOptionPane.showMessageDialog(this, "Preencha Todos os Campos para Cadastar Médico!", "Alteração de Médico!", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void limparCamposTela() {
        txtNome.setText("");
        txtCpf.setText("");
        txtCrm.setText("");
        txtTelefone.setText("");
        txtEndereco.setText("");
    }
    private void cmbEspecialidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEspecialidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbEspecialidadeActionPerformed

    private void txtCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox cmbEspecialidade;
    private javax.swing.JLabel imagemMedico;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblCrm;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEspecialidade;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JRadioButton rdoF;
    private javax.swing.JRadioButton rdoM;
    private javax.swing.ButtonGroup rgbSexo;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtCrm;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    private void carregarCmb() throws SQLException {
        EspecialidadeBO especialidadeBO = new EspecialidadeBO();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cmbEspecialidade.getModel();
        model.removeAllElements();
        for (Especialidade especialidade : especialidadeBO.buscarTodos()) {
            model.addElement(especialidade);
        }
    }
}
